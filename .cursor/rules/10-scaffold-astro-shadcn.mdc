---
description: Script de arranque completo para crear el proyecto (Astro + React + Tailwind + shadcn/ui + estructura base).
globs:
alwaysApply: true
---

# /scaffold - Inicialización Completa del Proyecto

## 1. Crear Proyecto Base
```bash
# Crear proyecto Astro con React y Tailwind
pnpm dlx create-astro@latest web-abogado --template with-tailwindcss --install --add react --git

# Navegar al directorio
cd web-abogado

# Verificar React (si falta)
pnpm astro add react
```

## 2. Instalar shadcn/ui
```bash
# Instalar shadcn/ui para Astro
pnpm dlx shadcn@latest init

# Seleccionar opciones:
# - TypeScript: Yes
# - Style: Default
# - Base color: Slate
# - CSS variables: Yes
# - Tailwind prefix: (vacío)
# - Components: src/components/ui
# - Utils: src/lib/utils

# Instalar componentes base
pnpm dlx shadcn@latest add button card input textarea select dialog sheet accordion navigation-menu tooltip
```

## 3. Instalar Dependencias Adicionales
```bash
# Dependencias de desarrollo
pnpm add -D @types/node @types/react @types/react-dom

# Radix UI (si no se instaló con shadcn)
pnpm add @radix-ui/react-dialog @radix-ui/react-navigation-menu @radix-ui/react-tooltip @radix-ui/react-accordion @radix-ui/react-select

# Utilidades
pnpm add clsx tailwind-merge class-variance-authority lucide-react

# Para formularios y validación
pnpm add react-hook-form @hookform/resolvers zod

# Para fechas (citas)
pnpm add date-fns

# Para analytics (opcional)
pnpm add @vercel/analytics
```

## 4. Configurar Tailwind
```typescript
// tailwind.config.mjs
import { defineConfig } from 'tailwindcss'

export default defineConfig({
  content: ['./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}'],
  theme: {
    extend: {
      colors: {
        // Design tokens del Rule 20
        primary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          200: '#bae6fd',
          300: '#7dd3fc',
          400: '#38bdf8',
          500: '#0ea5e9',
          600: '#0284c7',
          700: '#0369a1',
          800: '#075985',
          900: '#0c4a6e',
        },
        accent: {
          50: '#f0fdfa',
          100: '#ccfbf1',
          200: '#99f6e4',
          300: '#5eead4',
          400: '#2dd4bf',
          500: '#14b8a6',
          600: '#0d9488',
          700: '#0f766e',
          800: '#115e59',
          900: '#134e4a',
        }
      },
      fontFamily: {
        'serif': ['IBM Plex Serif', 'serif'],
        'sans': ['Inter', 'sans-serif'],
      }
    },
  },
  plugins: [],
})
```

## 5. Crear Estructura de Directorios
```bash
# Crear estructura completa
mkdir -p src/{layouts,pages/{areas,equipo,insights,legal},components/{ui,business,legal},content/{areas,insights},lib,styles,assets/images}

# Crear archivos base
touch src/layouts/{BaseLayout.astro,LegalLayout.astro}
touch src/pages/{index.astro,contacto.astro}
touch src/pages/areas/{index.astro,'[slug].astro'}
touch src/pages/equipo/index.astro
touch src/pages/insights/{index.astro,'[slug].astro'}
touch src/pages/legal/{privacidad.astro,terminos.astro,aviso-legal.astro}
touch src/components/{Navbar.tsx,Footer.astro,Seo.astro}
touch src/components/business/{AppointmentForm.tsx,ContactForm.tsx,ClientPortal.tsx}
touch src/components/legal/{Disclaimer.astro,PrivacyNotice.astro}
touch src/lib/{utils.ts,constants.ts,validations.ts}
touch src/styles/globals.css
```

## 6. Configurar Astro
```javascript
// astro.config.mjs
import { defineConfig } from 'astro/config';
import react from '@astrojs/react';
import tailwind from '@astrojs/tailwind';

export default defineConfig({
  integrations: [react(), tailwind()],
  output: 'static',
  site: 'https://tu-dominio.com',
  compressHTML: true,
  build: {
    inlineStylesheets: 'auto'
  },
  vite: {
    build: {
      cssMinify: true
    }
  }
});
```

## 7. Configurar TypeScript
```json
// tsconfig.json
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@/components/*": ["./src/components/*"],
      "@/lib/*": ["./src/lib/*"]
    }
  }
}
```

## 8. Scripts de Package.json
```json
{
  "scripts": {
    "dev": "astro dev",
    "build": "astro build",
    "preview": "astro preview",
    "astro": "astro",
    "check:contrast": "node scripts/contrast.mjs",
    "check:a11y": "pnpm dlx @axe-core/cli http://localhost:4321",
    "lighthouse": "pnpm dlx lighthouse http://localhost:4321 --output=html --output-path=./lighthouse-report.html"
  }
}
```

## 9. Verificación
```bash
# Instalar dependencias
pnpm install

# Ejecutar en desarrollo
pnpm dev

# Verificar en http://localhost:4321
# - Layout base funciona
# - Tailwind CSS aplicado
# - shadcn/ui componentes disponibles
# - React hidratación correcta
```

## 10. Próximos Pasos
Después de `/scaffold`, ejecutar:
- `/setup legal` - Configurar compliance legal
- `/setup business` - Implementar funcionalidades de negocio
- `/make component Navbar` - Crear componentes base