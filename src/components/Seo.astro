---
import { SITE_CONFIG, CONTACT_INFO } from '../lib/constants';

export interface Props {
  title: string;
  description: string;
  image?: string;
  canonical?: string;
  noindex?: boolean;
  type?: 'website' | 'article' | 'profile';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  section?: string;
  tags?: string[];
}

const {
  title,
  description,
  image = "/og-image.jpg",
  canonical,
  noindex = false,
  type = 'website',
  publishedTime,
  modifiedTime,
  author = "Manriquez GÃ³mez Melo Abogados",
  section,
  tags = []
} = Astro.props;

const siteName = SITE_CONFIG.name;
const siteUrl = SITE_CONFIG.url;
const fullTitle = title.includes(siteName) ? title : `${title} | ${siteName}`;
const fullImage = image.startsWith('http') ? image : `${siteUrl}${image}`;
const fullCanonical = canonical || Astro.url.href;

// JSON-LD Schema
const sameAsLinks = Object.values(SITE_CONFIG.links).filter(Boolean);

const baseJsonLd = {
  "@context": "https://schema.org",
  "@type": "LegalService",
  "name": siteName,
  "url": siteUrl,
  "logo": `${siteUrl}/favicon.svg`,
  "description": description,
  "address": {
    "@type": "PostalAddress",
    "streetAddress": CONTACT_INFO.address.full,
    "addressLocality": CONTACT_INFO.address.city,
    "addressCountry": CONTACT_INFO.address.country
  },
  "telephone": CONTACT_INFO.phone,
  "email": CONTACT_INFO.email,
  "areaServed": CONTACT_INFO.address.city,
  "serviceType": ["Derecho Laboral", "Derecho Familiar", "Derecho Penal", "Derecho Civil", "Derecho Empresarial", "Justicia Local"],
  "openingHours": [
    "Mo-Fr 09:00-18:00",
    "Sa 09:00-13:00"
  ],
  "sameAs": sameAsLinks
};

// Article schema for blog posts
const jsonLd = (type === 'article' && publishedTime)
  ? {
      ...baseJsonLd,
      "@type": "Article",
      "headline": title,
      "description": description,
      "image": fullImage,
      "datePublished": publishedTime,
      "dateModified": modifiedTime || publishedTime,
      "author": {
        "@type": "Person",
        "name": author
      },
      "publisher": {
        "@type": "Organization",
        "name": siteName,
        "logo": {
          "@type": "ImageObject",
          "url": `${siteUrl}/favicon.svg`
        }
      },
      ...(section ? { "articleSection": section } : {}),
      ...(tags.length > 0 ? { "keywords": tags.join(", ") } : {})
    }
  : baseJsonLd;
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle}>
<meta name="description" content={description}>
<meta name="robots" content={noindex ? "noindex,nofollow" : "index,follow"}>
<link rel="canonical" href={fullCanonical}>

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type}>
<meta property="og:url" content={fullCanonical}>
<meta property="og:title" content={fullTitle}>
<meta property="og:description" content={description}>
<meta property="og:image" content={fullImage}>
<meta property="og:site_name" content={siteName}>
<meta property="og:locale" content="es_ES">

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:url" content={fullCanonical}>
<meta property="twitter:title" content={fullTitle}>
<meta property="twitter:description" content={description}>
<meta property="twitter:image" content={fullImage}>

<!-- Additional Meta Tags -->
<meta name="author" content={author}>
<meta name="generator" content="Astro">
<meta name="format-detection" content="telephone=no">

<!-- Article specific meta tags -->
{type === 'article' && publishedTime && (
  <meta property="article:published_time" content={publishedTime}>
)}
{type === 'article' && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime}>
)}
{type === 'article' && author && (
  <meta property="article:author" content={author}>
)}
{type === 'article' && section && (
  <meta property="article:section" content={section}>
)}
{type === 'article' && tags.length > 0 && (
  tags.map(tag => <meta property="article:tag" content={tag}>)
)}

<!-- JSON-LD Schema -->
<script type="application/ld+json" is:inline>
  {JSON.stringify(jsonLd)}
</script>

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

<!-- DNS prefetch for performance -->
<link rel="dns-prefetch" href="//www.google-analytics.com">
<link rel="dns-prefetch" href="//fonts.googleapis.com">

<!-- Preload critical resources -->
<link rel="preload" href="https://fonts.googleapis.com/css2?family=IBM+Plex+Serif:wght@400;500;600;700&family=Inter:wght@400;500;600;700&display=swap" as="style">

<!-- Resource hints for better performance -->
<link rel="prefetch" href="https://cdn.jsdelivr.net/npm/@n8n/chat/dist/style.css">
<link rel="prefetch" href="https://cdn.jsdelivr.net/npm/@n8n/chat/dist/chat.bundle.es.js">
